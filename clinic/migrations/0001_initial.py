# Generated by Django 2.0.4 on 2018-11-05 06:48

import clinic.utils.utilities
import clinic.utils.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_address', models.CharField(max_length=100, verbose_name='Street Address')),
                ('city', models.CharField(blank=True, max_length=40)),
                ('state', models.CharField(choices=[('ap', 'Andhra Pradesh'), ('ar', 'Arunachal Pradesh'), ('as', 'Assam'), ('br', 'Bihar'), ('cg', 'Chhattisgarh'), ('ga', 'Goa'), ('gj', 'Gujarat'), ('hr', 'Haryana'), ('hp', 'Himachal Pradesh'), ('jk', 'Jammu and kashmir'), ('jh', 'Jharkhand'), ('ka', 'Karnataka'), ('kl', 'Kerala'), ('mp', 'Madhya Pradesh'), ('mh', 'Maharashtra'), ('mn', 'Manipur'), ('ml', 'Meghalaya'), ('mz', 'Mizoram'), ('nl', 'Nagaland'), ('or', 'Orissa'), ('pb', 'Punjab'), ('rj', 'Rajasthan'), ('sk', 'Sikkim'), ('tn', 'Tamil Nadu'), ('tr', 'Tripura'), ('uk', 'Uttarakhand'), ('up', 'Uttar Pradesh'), ('wb', 'West bengal'), ('tn', 'Tamil Nadu'), ('tr', 'Tripura'), ('an', 'Andaman and Nicobar Islands'), ('ch', 'Chandigarh'), ('dh', 'Dadra and Nagar Haveli'), ('dd', 'Daman and Diu'), ('dl', 'Delhi'), ('lp', 'Lakshadweep'), ('py', 'Pondicherry')], max_length=2)),
                ('country', models.CharField(choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AX', 'Aland Islands'), ('AS', 'American Samoa'), ('AI', 'Anguilla'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AN', 'Antilles - Netherlands'), ('AG', 'Antigua and Barbuda'), ('AQ', 'Antarctica'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AU', 'Australia'), ('AT', 'Austria'), ('AW', 'Aruba'), ('AZ', 'Azerbaijan'), ('bA ', 'osnia and Herzegovina'), ('BB', 'Barbados'), ('BD', 'Bangladesh'), ('BE', 'Belgium'), ('BF', 'Burkina Faso'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BI', 'Burundi'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BN', 'Brunei Darussalam'), ('BO', 'Bolivia'), ('BR', 'Brazil'), ('BS', 'Bahamas'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('BV', 'Belarus'), ('BZ', 'Belize'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('CG', 'Congo'), ('CI', "Cote D'Ivoire (Ivory Coast)"), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('HR', 'Croatia (Hrvatska)'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('CD', 'Democratic Republic of the Congo'), ('DJ', 'Djibouti'), ('DK', 'Denmark'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('TP', 'East Timor'), ('EE', 'Estonia'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FM', 'Federated States of Micronesia'), ('FO', 'Faroe Islands'), ('FR', 'France'), ('FX', 'France, Metropolitan'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GB', 'Great Britain (UK)'), ('GD', 'Grenada'), ('GE', 'Georgia'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GS', 'S. Georgia and S. Sandwich Islands'), ('GT', 'Guatemala'), ('GU', 'Guam'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IQ', 'Iraq'), ('IR', 'Iran'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KI', 'Kiribati'), ('KM', 'Comoros'), ('KN', 'Saint Kitts and Nevis'), ('KP', 'Korea (North)'), ('KR', 'Korea (South)'), ('KW', 'Kuwait'), ('KY', 'Cayman Islands'), ('KZ', 'Kazakhstan'), ('LA', 'Laos'), ('LB', 'Lebanon'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LR', 'Liberia'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('LY', 'Libya'), ('MK', 'Macedonia'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MY', 'Malaysia'), ('ML', 'Mali'), ('MW', 'Malawi'), ('MR', 'Mauritania'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MT', 'Malta'), ('MX', 'Mexico'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova'), ('MN', 'Mongolia'), ('MM', 'Myanmar'), ('MP', 'Northern Mariana Islands'), ('MS', 'Montserrat'), ('MV', 'Maldives'), ('MZ', 'Mozambique'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NU', 'Niue'), ('NZ', 'New Zealand (Aotearoa)'), ('OM', 'Oman'), ('PA', 'Panama'), ('PE', 'Peru'), ('PG', 'Papua New Guinea'), ('PH', 'Philippines'), ('PK', 'Pakistan'), ('PL', 'Poland'), ('PM', 'Saint Pierre and Miquelon'), ('CS', 'Serbia and Montenegro'), ('PN', 'Pitcairn'), ('PR', 'Puerto Rico'), ('PS', 'Palestinian Territory'), ('PT', 'Portugal'), ('PW', 'Palau'), ('PY', 'Paraguay'), ('QA', 'Qatar'), ('RE', 'Reunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('WS', 'Samoa'), ('SH', 'Saint Helena'), ('VC', 'Saint Vincent and the Grenadines'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SN', 'Senegal'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('ES', 'Spain'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('SU', 'USSR (former)'), ('SZ', 'Swaziland'), ('TW', 'Taiwan'), ('TZ', 'Tanzania'), ('TJ', 'Tajikistan'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UA', 'Ukraine'), ('UG', 'Uganda'), ('AE', 'United Arab Emirates'), ('UK', 'United Kingdom'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VA', 'Vatican City State'), ('VE', 'Venezuela'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('VN', 'Viet Nam'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('YU', 'Yugoslavia (former)'), ('ZM', 'Zambia'), ('ZR', 'Zaire (former)'), ('ZW', 'Zimbabwe')], max_length=2)),
                ('pincode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('doe', models.DateField(verbose_name='Date of Establishment')),
                ('type', models.CharField(choices=[('fc', 'Free Clinic'), ('gc', 'General Clinic'), ('sc', 'Specialist Clinic')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='BranchAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.Branch')),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Address')),
            ],
        ),
        migrations.CreateModel(
            name='BranchAssistantDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.IntegerField()),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='BranchEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qual', models.CharField(blank=True, max_length=20, verbose_name='Qualification')),
                ('salary', models.IntegerField()),
                ('role', models.CharField(max_length=20)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='BranchPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='BranchTimming',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TimeField(verbose_name='Opens at')),
                ('end', models.TimeField(verbose_name='Closes at')),
                ('day', models.CharField(choices=[('sun', 'Sunday'), ('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday')], max_length=3)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Branch')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Registration date')),
                ('recomnendation', models.CharField(blank=True, max_length=180)),
            ],
        ),
        migrations.CreateModel(
            name='CaseAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=clinic.utils.utilities.get_adv_date, verbose_name='Appointment Time')),
                ('location', models.CharField(choices=[('C', 'Clinic'), ('H', 'House Visit'), ('V', 'Visiting Home'), ('c', 'Custom')], default='C', max_length=1, verbose_name='Location')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinic.Case')),
                ('custom_location', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Address')),
            ],
        ),
        migrations.CreateModel(
            name='CaseVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Visit Time')),
                ('fees', models.PositiveSmallIntegerField(default=100)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Case')),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ClinicPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Clinic')),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('name', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('scientific_name', models.CharField(blank=True, max_length=40)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('name', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(max_length=10, unique=True, verbose_name='')),
                ('description', models.CharField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('er_cont_name', models.CharField(blank=True, max_length=50, verbose_name='Emergency Contact Name')),
                ('er_rel', models.CharField(choices=[('S', 'Sprouse'), ('P', 'Parent'), ('s', 'Sibling'), ('G', 'Guardian'), ('O', 'Other')], max_length=1, verbose_name='Relationship with the Emergency contact')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContactPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.EmergencyContact')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ImageField(blank=True, upload_to='clinic/static/clinic/user_profile')),
                ('reg_time', models.DateTimeField(auto_now_add=True, verbose_name='Registration Time')),
                ('first_name', models.CharField(max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('blood_type', models.PositiveSmallIntegerField(blank=True, choices=[(-1, 'Unknown'), (0, 'A+'), (1, 'B+'), (2, 'AB+'), (3, 'O+'), (4, 'A-'), (5, 'B-'), (6, 'AB-'), (7, 'O-')])),
                ('bio', models.CharField(blank=True, max_length=250, verbose_name='Biography')),
                ('email', models.CharField(blank=True, max_length=40, validators=[clinic.utils.validators.validate_email], verbose_name='Email Address')),
            ],
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Address')),
            ],
        ),
        migrations.CreateModel(
            name='PersonPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.BigIntegerField(validators=[clinic.utils.validators.validate_number])),
                ('type', models.CharField(choices=[('h', 'Home'), ('O', 'Office'), ('o', 'Other')], default='h', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='VisitComplaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('description', models.CharField(blank=True, max_length=120)),
                ('status', models.CharField(max_length=30)),
                ('serverity', models.CharField(max_length=30)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.CaseVisit')),
            ],
        ),
        migrations.CreateModel(
            name='VisitDisease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.Disease')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.CaseVisit')),
            ],
        ),
        migrations.CreateModel(
            name='VisitDrug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.Drug')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.CaseVisit')),
            ],
        ),
        migrations.CreateModel(
            name='VisitStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.CharField(max_length=200)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.CaseVisit')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='clinic.Person')),
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[clinic.utils.validators.validate_username])),
                ('password', models.CharField(max_length=100, validators=[clinic.utils.validators.validate_password])),
                ('speciality', models.CharField(choices=[('ped', 'Pediatrics'), ('crl', 'Cardiologist'), ('gyl', 'Gynaecolgist'), ('nrl', 'Neurologist'), ('ocl', 'Oncologist'), ('phy', 'Physician'), ('nes', 'Neuro Surgeon'), ('ges', 'General Surgeon'), ('gep', 'General Practitioner')], max_length=3, verbose_name='Practitioner type')),
                ('qual', models.CharField(blank=True, max_length=20, verbose_name='Qualification')),
            ],
            bases=('clinic.person',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='clinic.Person')),
                ('occupation', models.CharField(blank=True, max_length=40)),
                ('med_info', models.CharField(blank=True, max_length=100, verbose_name='Medical Information')),
            ],
            bases=('clinic.person',),
        ),
        migrations.AddField(
            model_name='personphone',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Person'),
        ),
        migrations.AddField(
            model_name='personphone',
            name='phone_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Phone'),
        ),
        migrations.AddField(
            model_name='personaddress',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Person'),
        ),
        migrations.AddField(
            model_name='emergencycontactphone',
            name='phone_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Phone'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Person'),
        ),
        migrations.AddField(
            model_name='clinicphone',
            name='phone_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Phone'),
        ),
        migrations.AddField(
            model_name='branchphone',
            name='phone_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Phone'),
        ),
        migrations.AddField(
            model_name='branchemployee',
            name='person',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Person'),
        ),
        migrations.AddField(
            model_name='branch',
            name='clinic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Clinic'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='clinic_head',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.Doctor'),
        ),
        migrations.AddField(
            model_name='caseappointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Doctor'),
        ),
        migrations.AddField(
            model_name='caseappointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient'),
        ),
        migrations.AddField(
            model_name='case',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Doctor'),
        ),
        migrations.AddField(
            model_name='case',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient'),
        ),
        migrations.AddField(
            model_name='branchassistantdoctor',
            name='doctor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.Doctor'),
        ),
        migrations.AddField(
            model_name='branch',
            name='branch_head',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.Doctor'),
        ),
    ]
